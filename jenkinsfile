pipeline {
    agent any

  environment {
        NODEJS_HOME = tool 'nodeJs'
        PATH = "${NODEJS_HOME}/bin:${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install '
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build:prod'
            }
        }

        stage('Unit Tests') {
            steps {
                sh 'npm run  '
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts 'dist/**/*'
            }
        }

stage('Deploy') {
    steps {
        script {
            def remoteServer = 'ec2-user@172.31.27.194'
            def remotePath = '/var/www/html/'

            withCredentials([sshUserPrivateKey(credentialsId: 'ec2', keyFileVariable: 'key', usernameVariable: 'username')]) {
                // Copy artifacts to remote host using scp
                sh "scp -r -o StrictHostKeyChecking=no -i $key dist/app/* ${remoteServer}:${remotePath}"

                // Restart httpd
                sh "ssh -o StrictHostKeyChecking=no -i $key ${remoteServer} 'sudo systemctl restart httpd'"
            }
        }
    }
}


        stage('Post-Build Actions') {
            steps {
                     mail bcc: '',
                     body: "hi team this result of <b>pipeline Build URL</b>:( ${env.BUILD_URL})  <b>Git Commit</b>: ${env.GIT_COMMIT} <b>the result of build</b> :${currentBuild.result}" ,
                       cc: '', from: '', replyTo: '',
                       subject: "Jenkins Build ${env.JOB_NAME} #${env.BUILD_NUMBER}" , 
                        to: 'benahmedmansour89@gmail.com'
            }
        }
    }

    post {
        always {
          
            cleanWs()
        }
    }
}